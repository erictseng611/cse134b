window.addEventListener("DOMContentLoaded",function(){var teamName=localStorage.getItem("team");teamName=teamName.replace(/\"/g,"");var roster=JSON.parse(localStorage.getItem("roster"));var rosterContainer=document.querySelector("#view");var userType="coach";var team;if(!roster){getRosterData(null)}else{var retrieved=localStorage.getItem("roster");team=JSON.parse(retrieved);renderRoster(team);getRosterData(team)}if(userType==="coach"){document.querySelector("#addPlayer-button").classList.remove("hidden")}document.querySelector("#returnTo-homePage").addEventListener("click",returnToHome);document.addEventListener("click",function(e){if(e.target.classList.contains("delete-button")){deletePlayer(e)}else if(e.target.classList.contains("edit-button")){editPlayer(e)}else if(e.target.classList.contains("save-button")){savePlayer(e)}else if(e.target.classList.contains("player-card")){renderPlayerProfile(e)}else if(e.target.id==="returnToPlayers-button"){returnToPlayers()}});function returnToHome(){window.location.href="./homepage.html"}function renderRoster(team){let t=document.getElementById("roster-view");let markup=team.map(player=>{if(!player.archived){return`<figure class="player-card" id="${player.name}" onclick="">\n                <img src="${player.img}" class="inline_block" alt="player headshot">\n                <figcaption class="inline_block">\n                <p class="inline_block">${player.name}</p><span> #${player.number}</span>\n                <p> ${player.position} </p>\n                <button class="delete-button hidden" data-player="${player.name}" data-number="${player.number}">Delete</button>\n                <button class="inline_block edit-button hidden" data-player="${player.name}" data-number="${player.number}"> Edit </button>\n                </figcaption>\n                </figure>`}}).join("");t.content.querySelector("#player-list").innerHTML=markup;let clonedTemplate=document.importNode(t.content,true);rosterContainer.appendChild(clonedTemplate);if(userType==="coach"){var actionButtons=Array.from(rosterContainer.getElementsByTagName("button"));actionButtons.forEach(button=>{button.classList.remove("hidden")})}}function deletePlayer(e){if(userType==="coach"){var finder=e.target.dataset.player;var el=document.getElementById(finder);el.parentNode.removeChild(el);let localRosterCopy=JSON.parse(localStorage.getItem("roster"));var playerIndex=findPlayerIndex(finder,parseInt(e.target.dataset.number),localRosterCopy);console.log(playerIndex);localRosterCopy[playerIndex].archived="true";localStorage.setItem("roster",JSON.stringify(localRosterCopy));firebase.database().ref("teams/"+teamName+"/roster/"+playerIndex+"/archived").set(true)}}function editPlayer(e){if(userType==="coach"){let rosterContainer=document.getElementById("roster");let rosterCopy=JSON.parse(localStorage.getItem("roster"));var result=rosterCopy.find(function(player){if(player.name===e.target.dataset.player&&player.number.toString()===e.target.dataset.number){return true}});let t=document.getElementById("update-view");let markup=`<label>Player<input name="name" data-player="${result.name}" value="${result.name}"></label>\n                            <label>Number<input name="number" data-number="${result.number}" value="${result.number}"></label>\n                            <label>Position<input name="position" data-position="${result.position}" value="${result.position}"></label>\n                            <button class="save-button"> Save </button>`;t.innerHTML=markup;rosterContainer.classList.add("hidden");t.classList.remove("hidden")}}function savePlayer(){if(userType==="coach"){var rosterContainer=document.getElementById("roster");var playerlist=document.getElementById("player-list");let t=document.getElementById("update-view");var inputs=document.getElementsByTagName("input");const playerName=inputs.name.dataset.player;const playerNumber=parseInt(inputs.number.dataset.number);let rosterCopy=JSON.parse(localStorage.getItem("roster"));var index=findPlayerIndex(playerName,playerNumber,rosterCopy);rosterCopy[index].name=inputs.name.value;rosterCopy[index].number=parseInt(inputs.number.value);rosterCopy[index].position=inputs.position.value;localStorage.setItem("roster",JSON.stringify(rosterCopy));playerlist.parentElement.removeChild(playerlist);renderRoster(rosterCopy);rosterContainer.classList.remove("hidden");t.classList.add("hidden");firebase.database().ref("teams/"+teamName+"/roster/"+index+"/name").set(inputs.name.value);firebase.database().ref("teams/"+teamName+"/roster/"+index+"/number").set(parseInt(inputs.number.value));firebase.database().ref("teams/"+teamName+"/roster/"+index+"/position").set(inputs.position.value)}}function renderPlayerProfile(e){var roster=document.querySelector("#roster");var playerProfile=document.querySelector("#playerProfile-view");roster.classList.add("hidden");let rosterCopy=JSON.parse(localStorage.getItem("roster"));var currPlayer;rosterCopy.forEach(player=>{if(player.name===e.target.id){currPlayer=player}});let markup=`<button id="returnToPlayers-button"> Back to Players </button>\n                        <div class="text_align_center">\n                            <figure class="player-figure text_align_center">\n                            <img src=${currPlayer.img} class="player-profile-pic" alt="profile pic">\n                            <figcaption class="text_align_center no_margin">\n                            <h1> ${currPlayer.name} #${currPlayer.number}</h1>\n                            <h2 class="no_margin"> ${currPlayer.position} </h2>\n                            </figcaption>\n                            </figure>\n                            <div class="player-stats">\n                            <div class="margin_center">\n                            <p> Goals: ${currPlayer.goals} </p>\n                            <p> Fouls: ${currPlayer.fouls} </p>\n                            <p> Yellow Cards: ${currPlayer.yellowCards} </p>\n                            <p> Red Cards: ${currPlayer.redCards} </p>\n                            <p> Shots on Goal: ${currPlayer.shotsOnGoal} </p>\n                            <p> Corner Kicks: ${currPlayer.cornerKicks} </p>\n                            <p> Goal Kicks: ${currPlayer.goalKicks} </p>\n                            </div>\n                            </div>\n                        </div>`;playerProfile.innerHTML=markup;playerProfile.classList.remove("hidden")}function returnToPlayers(){var roster=document.querySelector("#roster");var playerProfile=document.querySelector("#playerProfile-view");roster.classList.remove("hidden");playerProfile.classList.add("hidden");while(playerProfile.firstChild){playerProfile.removeChild(playerProfile.firstChild)}}function getRosterData(compare){team=firebase.database().ref("teams/"+teamName+"/roster");team.on("value",function(snapshot){localStorage.setItem("roster",JSON.stringify(snapshot.val()));if(compare!==team){while(rosterContainer.firstChild){rosterContainer.removeChild(rosterContainer.firstChild)}renderRoster(snapshot.val())}})}function findPlayerIndex(playerName,playerNumber,roster){var index=9999;console.log(roster);roster.forEach(function(player,i){console.log(player.name,playerName);console.log(player.number,playerNumber);if(player.name===playerName&&player.number==playerNumber){index=i}});return index}});